import asyncio
from time import time
from datetime import datetime
from config import BOT_USERNAME
from config import GROUP_SUPPORT, UPDATES_CHANNEL, START_PIC
from NIXA.filters import command
from NIXA.command import commandpro
from pyrogram import filters
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from NIXA.main import bot as Client

START_TIME = datetime.utcnow()
START_TIME_ISO = START_TIME.replace(microsecond=0).isoformat()
TIME_DURATION_UNITS = (
    ('week', 60 * 60 * 24 * 7),
    ('day', 60 * 60 * 24),
    ('hour', 60 * 60),
    ('min', 60),
    ('sec', 1)
)

async def _human_time_duration(seconds):
    if seconds == 0:
        return 'inf'
    parts = []
    for unit, div in TIME_DURATION_UNITS:
        amount, seconds = divmod(int(seconds), div)
        if amount > 0:
            parts.append('{} {}{}'
                         .format(amount, unit, "" if amount == 1 else "s"))
    return ', '.join(parts)
    
   

@Client.on_message(command("start") & filters.private & ~filters.edited)
async def start_(client: Client, message: Message):
    await message.reply_photo(
        photo=f"{START_PIC}",
        caption=f"""** ú·¥á è …¢·¥ú èÍú± 
·¥õ ú…™Íú±  ô·¥è·¥õ  ú·¥ÄÍú± ·¥Ä  ü·¥è·¥õ ·¥èÍú∞ Íú∞·¥á·¥Ä·¥õ·¥ú Ä·¥áÍú±  ô·¥ÄÍú±·¥á·¥Ö ·¥è…¥ ·¥Ä.…™ ·¥Ä…¥·¥Ö  ú…™…¢ ú Íú±·¥è·¥ú…¥·¥Ö Q·¥ú·¥Ä ü…™·¥õ è ·¥èÍú∞ Íú±·¥è…¥…¢Íú±.
·¥Ä…¥·¥Ö ·¥õ ú…™Íú± ·¥ò·¥è·¥°·¥á Ä“ì·¥ú ü ü ·¥ç·¥úÍú±…™·¥Ñ  ô·¥è·¥õ ·¥Ä·¥ä·¥ä·¥ú ·¥õ ú·¥á·¥ç ·¥èÍú∞ ·¥Ä ü ü Íú±·¥á Ä·¥†·¥á Ä ·¥èÍú∞ ·¥ç·¥úÍú±…™·¥Ñ  ô·¥è·¥õ ·¥ÄÍú±Íú±..

·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è [„ÄÖR…™·¥Ö·¥á Ä‰πÇ‡øê](https://t.me/i_ajiT)
**""",
    reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "‚ûï ‚ù∞ ·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ‚ù± ‚ûï", url=f"https://t.me/{BOT_USERNAME}?startgroup=true"
                    )
                ],
                [
                    InlineKeyboardButton(
                        " ú·¥á ü·¥ò & ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥ÖÍú±", url=f"https://t.me/ajju_support26"
                    ),
                    InlineKeyboardButton(
                        "‚Ä¢·¥è·¥°…¥·¥á Ä‚Ä¢", url="https://t.me/i_ajit"
                    )
                ],
                [
                    InlineKeyboardButton(
                        "üì¢ ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥áÍú± ·¥Ñ ú·¥Ä…¥…¥·¥á ü", url=f"https://t.me/{UPDATES_CHANNEL}"
                    ),
                    InlineKeyboardButton(
                        "Íú±·¥ú·¥ò·¥ò·¥è Ä·¥õ …¢ Ä·¥è·¥ú·¥ò üáÆüá≥", url=f"https://t.me/{GROUP_SUPPORT}"
                    )
                ]
                
           ]
        ),
    )
    
    
@Client.on_message(commandpro(["/start", "/stats"]) & filters.group & ~filters.edited)
async def start(client: Client, message: Message):
    await message.reply_photo(
        photo=f"https://telegra.ph/file/0d8f59f98eaa6eec46a17.jpg",
        caption=f"""·¥õ ú·¥Ä…¥·¥ã·¥Ö “ì·¥è Ä ·¥Ä·¥Ö·¥Ö…™…¥…¢ ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò  “ì·¥è Ä ·¥Ä…¥ è «´·¥ú·¥á Ä è  è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥ä·¥è…™…¥ ·¥è·¥ú Ä s·¥ú·¥ò·¥ò·¥è Ä·¥õ …¢ Ä·¥è·¥ú·¥ò ·¥Ä…¥·¥Ö ·¥Ñ ú·¥Ä…¥…¥·¥á ü.""",
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "‚Ä¢s·¥ú·¥ò·¥ò·¥è Ä·¥õ …¢ Ä·¥è·¥ú·¥ò‚Ä¢", url=f"https://t.me/+ABubCJUp9bIxYzQ9")
                ]
            ]
        ),
    )


@Client.on_message(command(["ajju", "owner"]) & filters.group & ~filters.edited)
async def help(client: Client, message: Message):
    await message.reply_photo(
        photo=f"https://telegra.ph/file/66433337a6d0e4ed51acf.jpg",
        caption=f"""O·¥°…¥·¥á Ä …™s  ú·¥á Ä·¥á ·¥ò üs ·¥Ñ ú·¥á·¥Ñ·¥ã ·¥è·¥ú·¥õ""",
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "·¥è·¥°…¥·¥á Ä"üî•, url=f"https://t.me/i_ajit")
                ]
            ]
        ),
    )
